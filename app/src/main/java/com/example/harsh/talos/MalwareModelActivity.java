package com.example.harsh.talos;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

import org.tensorflow.contrib.android.TensorFlowInferenceInterface;

import java.util.Arrays;

public class MalwareModelActivity extends AppCompatActivity {

    private static final String MODEL_FILE = "file:///android_asset/frozen_model_talos1.pb";

    private static final String INPUT_NODE = "Input";
    private static final String OUTPUT_NODE = "output";
    private static final int[] INPUT_SIZE = {1,324};

    private TensorFlowInferenceInterface inferenceInterface;

    static {
        System.loadLibrary("tensorflow_inference");
    }

    public static int argmax (float [] elems)
    {
        int bestIdx = -1;
        float max = -1000;
        for (int i = 0; i < elems.length; i++) {
            float elem = elems[i];
            if (elem > max) {
                max = elem;
                bestIdx = i;
            }
        }
        return bestIdx;
    }
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_malware_model);

        inferenceInterface = new TensorFlowInferenceInterface();
        inferenceInterface.initializeTensorFlow(getAssets(), MODEL_FILE);
        System.out.println("model loaded successfully");

        Intent intent = getIntent();
        float[] array = intent.getFloatArrayExtra("Malware_array");
        //Log.d("this is my array", "arr: " + Arrays.toString(array));

        System.out.println(array.length);

        inferenceInterface.fillNodeFloat(INPUT_NODE, INPUT_SIZE, array);


        inferenceInterface.runInference(new String[] {OUTPUT_NODE});

        float[] result={0,0} ;
        //int[] result={0};
        inferenceInterface.readNodeFloat(OUTPUT_NODE, result);
        Log.d("the result array", "result: " + Arrays.toString(result));
        int class_id=argmax(result);


        String s="class";
        if (class_id==0)
        {
            s="The app is likely benign\n";
            s = s + "Confidence: " + result[0];
        }
        else if (class_id==1)
        {
            s="The app is likely malware\n";
            s = s + "Confidence: " + result[1];
        }

        //System.out.println(Float.toString(result[0]));

        final TextView textViewR = (TextView) findViewById(R.id.tv);
        //textViewR.setText(Integer.toString(class_id));
        textViewR.setText(s);

    }
}
